var w=Object.defineProperty;var x=(i,t,e)=>t in i?w(i,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[t]=e;var h=(i,t,e)=>(x(i,typeof t!="symbol"?t+"":t,e),e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))o(s);new MutationObserver(s=>{for(const n of s)if(n.type==="childList")for(const a of n.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&o(a)}).observe(document,{childList:!0,subtree:!0});function e(s){const n={};return s.integrity&&(n.integrity=s.integrity),s.referrerPolicy&&(n.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?n.credentials="include":s.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function o(s){if(s.ep)return;s.ep=!0;const n=e(s);fetch(s.href,n)}})();function d(i,t){return Math.floor(Math.random()*(t-i+1))+i}function l(){const i=d(0,255),t=d(0,255),e=d(0,255);return Math.sqrt((.299*i)**2+(.587*t)**2+(.114*e)**2)>150?l():`rgb(${i}, ${t}, ${e})`}class S{constructor(t,e=500,o=500,s=10){h(this,"context");h(this,"rows");h(this,"columns");this.canvas=t,this.width=e,this.height=o,this.cellSize=s,this.canvas.width=e,this.canvas.height=o,this.context=t.getContext("2d"),this.rows=Math.floor(o/s),this.columns=Math.floor(e/s)}clearCanvas(){var t;(t=this.context)==null||t.clearRect(0,0,this.width,this.height)}drawPauseScreen(){if(!this.context)throw new Error("No context");this.context.fillStyle="rgba(0, 0, 0, 0.5)",this.context.fillRect(0,0,this.width,this.height),this.context.fillStyle="white",this.context.font="30px Arial",this.context.textAlign="center",this.context.fillText("Paused",this.width/2,this.height/2)}drawGrid(){var t,e,o,s,n,a;if(!this.context)throw new Error("No context");this.context.lineWidth=.5,(t=this.context)==null||t.beginPath();for(let c=0;c<=this.width;c+=this.cellSize)(e=this.context)==null||e.moveTo(c,0),(o=this.context)==null||o.lineTo(c,this.height);for(let c=0;c<=this.height;c+=this.cellSize)(s=this.context)==null||s.moveTo(0,c),(n=this.context)==null||n.lineTo(this.width,c);(a=this.context)==null||a.stroke()}drawRect(t,e,o="green"){if(!this.context)throw new Error("No context");this.context.fillStyle=o,this.context.fillRect(t*this.cellSize,e*this.cellSize,this.cellSize,this.cellSize)}drawCircle(t,e,o="green"){if(!this.context)throw new Error("No context");this.context.fillStyle=o,this.context.beginPath(),this.context.arc(t*this.cellSize+this.cellSize/2,e*this.cellSize+this.cellSize/2,this.cellSize/2,0,Math.PI*2),this.context.fill()}drawRectsArray(t,e="green"){for(const o of t)this.drawRect(o.x,o.y,e)}getRandomPosition(t=[]){let e={x:d(0,this.columns-1),y:d(0,this.rows-1)};return t.find(o=>o.x===e.x&&o.y===e.y)?this.getRandomPosition(t):e}}var r=(i=>(i[i.Up=0]="Up",i[i.Down=1]="Down",i[i.Left=2]="Left",i[i.Right=3]="Right",i))(r||{});class f{constructor(t,e={x:0,y:0}){h(this,"body");h(this,"direction");h(this,"color",l());this.gameBoard=t,this.body=[{x:e.x,y:e.y}],this.direction=r.Right}get directionVector(){switch(this.direction){case r.Up:return{x:0,y:-1};case r.Down:return{x:0,y:1};case r.Left:return{x:-1,y:0};case r.Right:return{x:1,y:0}}}move(t){const e=this.body[0],o={x:(e.x+this.directionVector.x+this.gameBoard.columns)%this.gameBoard.columns,y:(e.y+this.directionVector.y+this.gameBoard.rows)%this.gameBoard.rows};this.body.unshift(o),t||this.body.pop()}changeDirection(t){switch(this.direction){case r.Up:t!==r.Down&&(this.direction=t);break;case r.Down:t!==r.Up&&(this.direction=t);break;case r.Left:t!==r.Right&&(this.direction=t);break;case r.Right:t!==r.Left&&(this.direction=t);break}}checkSelfCollision(){const t=this.body.slice(1);for(const e of t)if(this.checkCollisionWithPosition(e))return!0;return!1}checkCollisionWithPosition(t){const e=this.body[0];return e.x===t.x&&e.y===t.y}getHead(){return this.body[0]}getBody(){return this.body}draw(){this.gameBoard.drawRectsArray(this.body,this.color)}}class m{constructor(t){h(this,"position");h(this,"color",l());this.gameBoard=t,this.position=this.gameBoard.getRandomPosition()}random(t){this.position=this.gameBoard.getRandomPosition(t),this.color=l()}draw(){this.gameBoard.drawCircle(this.position.x,this.position.y,this.color)}}class p{constructor(){h(this,"score",0);h(this,"highScore",Number(window.localStorage.getItem("highScore"))||0);this.updateScore(),this.updateHighScore()}addScore(){this.score++,this.updateScore()}updateScore(){const t=document.getElementById("score");t&&(t.innerText=this.score.toString()),this.updateHighScore()}resetScore(){this.score=0,this.updateScore()}updateHighScore(){this.score>this.highScore&&(this.highScore=this.score,window.localStorage.setItem("highScore",this.highScore.toString()));const t=document.getElementById("high-score");t&&(t.innerText=this.highScore.toString())}}class k{constructor(t){h(this,"snake");h(this,"speed",100);h(this,"food");h(this,"score",new p);h(this,"isPaused",!0);this.gameBoard=t,this.snake=new f(this.gameBoard),this.food=new m(this.gameBoard)}update(){this.snake.checkCollisionWithPosition(this.food.position)?(this.score.addScore(),this.snake.move(!0),this.food.random(this.snake.getBody())):this.snake.move(!1),this.snake.checkSelfCollision()&&this.restart()}render(){this.gameBoard.clearCanvas(),this.food.draw(),this.snake.draw()}gameLoop(){this.isPaused||(this.update(),this.render()),setTimeout(()=>{window.requestAnimationFrame(this.gameLoop.bind(this))},this.speed)}pause(){this.isPaused=!0,this.gameBoard.drawPauseScreen()}resume(){this.isPaused=!1}start(){this.isPaused=!1,document.addEventListener("keydown",t=>{(t.key==="w"||t.key==="ArrowUp")&&this.snake.changeDirection(r.Up),(t.key==="s"||t.key==="ArrowDown")&&this.snake.changeDirection(r.Down),(t.key==="a"||t.key==="ArrowLeft")&&this.snake.changeDirection(r.Left),(t.key==="d"||t.key==="ArrowRight")&&this.snake.changeDirection(r.Right),t.key===" "&&(this.isPaused?this.resume():this.pause())}),this.gameLoop()}restart(){this.snake=new f(this.gameBoard),this.food=new m(this.gameBoard),this.score.resetScore()}}const b=document.getElementById("game"),g=document.getElementById("canvas-container");console.log(g.clientWidth,g.clientHeight);const u=20,y=Math.floor(g.clientWidth/u)*u,B=y,P=new S(b,y,B,u),R=new k(P);R.start();
